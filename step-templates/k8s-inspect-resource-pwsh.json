{
  "Id": "53fe7e02-d003-4860-bf15-1122a128d7c0",
  "Name": "Inspect Resources",
  "Description": "Created from step 'Inspect Services' in project 'Support Runbooks'",
  "ActionType": "Octopus.KubernetesRunScript",
  "Version": 43,
  "CommunityActionTemplateId": null,
  "Packages": [],
  "Properties": {
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "<#\n    This script provides a general purpose method for querying Kubernetes resources. It supports common operations\n    like get, describe, logs and output formats like yaml and json. Output can be captured as artifacts.\n#>\n\n<#\n.Description\nExecute an application, capturing the output. Based on https://stackoverflow.com/a/33652732/157605\n#>\nFunction Execute-Command ($commandPath, $commandArguments)\n{\n  Write-Host \"Executing: $commandPath $($commandArguments -join \" \")\"\n  \n  Try {\n    $pinfo = New-Object System.Diagnostics.ProcessStartInfo\n    $pinfo.FileName = $commandPath\n    $pinfo.RedirectStandardError = $true\n    $pinfo.RedirectStandardOutput = $true\n    $pinfo.UseShellExecute = $false\n    $pinfo.Arguments = $commandArguments\n    $p = New-Object System.Diagnostics.Process\n    $p.StartInfo = $pinfo\n    $p.Start() | Out-Null\n    [pscustomobject]@{\n        stdout = $p.StandardOutput.ReadToEnd()\n        stderr = $p.StandardError.ReadToEnd()\n        ExitCode = $p.ExitCode\n    }\n    $p.WaitForExit()\n  }\n  Catch {\n     exit\n  }\n}\n\n<#\n.Description\nGet the kubectl arguments for a given action\n#>\nfunction Get-KubectlVerb() \n{\n    switch($OctopusParameters[\"_Kubectl Verb\"])\n    {\n        \"get json\" {return ,@(\"-o\", \"json\", \"get\")}\n        \"get yaml\" {return ,@(\"-o\", \"yaml\", \"get\")}\n        \"describe\" {return ,@(\"describe\")}\n        \"logs\" {return ,@(\"logs\")}\n        \"logs tail\" {return ,@(\"logs\", \"--tail\", \"100\")}\n        \"previous logs\" {return ,@(\"logs\", \"--previous\")}\n        \"previous logs tail\" {return ,@(\"logs\", \"--previous\", \"--tail\", \"100\")}\n        default {return ,@(\"get\")}\n    }\n}\n\n<#\n.Description\nGet an appropiate file extension based on the selected action\n#>\nfunction Get-ArtifactExtension() \n{\n   switch($OctopusParameters[\"_Kubectl Verb\"])\n    {\n        \"get json\" {\"json\"}\n        \"get yaml\" {\"yaml\"}\n        default {\"txt\"}\n    }\n}\n\nif ($OctopusParameters[\"_Kubectl Verb\"] -like \"*logs*\") \n{\n    if ( -not ($OctopusParameters[\"_Resource\"] -like \"pod*\"))\n    {\n        Write-Error \"Logs can only be returned for pods, not $($OctopusParameters[\"_Resource\"])\"\n    }\n    else\n    {\n        Execute-Command kubectl (@(\"-o\", \"json\", \"get\", \"pods\") + $OctopusParameters[\"_Names\"].Split(\"`n\")) |\n            # Select the stdout property from the execution\n            Select-Object -ExpandProperty stdout |\n            # Convert the output from JSON\n            ConvertFrom-JSON | \n            # Get the items object from the kubectl response\n            % {if ((Get-Member -InputObject $_ -Name items).Count -ne 0) {Select-Object -InputObject $_ -ExpandProperty items} else {$_}} |\n            # Get the pod names\n            % {@{logs=(Select-Object -InputObject (Execute-Command kubectl ((Get-KubectlVerb) + @($_.metadata.name))) -ExpandProperty stdout); name=$_.metadata.name}} |\n            # Write the output\n            % {Write-Host $_.logs; $_} |\n            # Optionally capture the artifact\n            % {\n                if ($OctopusParameters[\"_Create Artifact\"] -ieq \"true\") \n                {\n                    Set-Content -Path \"$($_.name).$(Get-ArtifactExtension)\" -Value $_.logs\n                    New-OctopusArtifact \"$($_.name).$(Get-ArtifactExtension)\"\n                }\n            }\n    }      \n}\nelse\n{\n    Execute-Command kubectl ((Get-KubectlVerb) + @($OctopusParameters[\"_Resource\"]) + $OctopusParameters[\"_Names\"].Split(\"`n\")) |\n        % {Select-Object -InputObject $_ -ExpandProperty stdout} |\n        % {Write-Host $_; $_} |\n        % {\n            if ($OctopusParameters[\"_Create Artifact\"] -ieq \"true\") \n            {\n                Set-Content -Path \"output.$(Get-ArtifactExtension)\" -Value $_\n                New-OctopusArtifact \"output.$(Get-ArtifactExtension)\"\n            }\n        }\n}\n",
    "Octopus.Action.KubernetesContainers.Namespace": "#{if Namespace}#{Namespace}#{/if}#{unless Namespace}#{Octopus.Action.Kubernetes.Namespace}#{/unless}"
  },
  "Parameters": [
    {
      "Id": "8a1ebc8c-ddf3-42bb-be49-9b36ee417f5d",
      "Name": "_Resource",
      "Label": "Resource",
      "HelpText": "The type of Kubernetes resource to inspect",
      "DefaultValue": "pod",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "pod|Pod\nservice|Service\ndeployment|Deployment\nreplicaset|ReplicaSet\nconfigmap|ConfigMap\nsecret|Secret\nnode|Node"
      }
    },
    {
      "Id": "735e2fa4-4f9a-4183-aafe-653f3f6fb103",
      "Name": "_Kubectl Verb",
      "Label": "Kubectl Verb",
      "HelpText": "The action used to inspect the Kubernetes resource",
      "DefaultValue": "get",
      "DisplaySettings": {
        "Octopus.ControlType": "Select",
        "Octopus.SelectOptions": "get|Get\nget json|Get JSON\nget yaml|Get YAML\nlogs|Pod Logs\nlogs tail|Pod Logs Tail\nprevious logs|Previous Pod Logs\nprevious logs tail|Previous Pod Logs Tail\ndescribe|Describe"
      }
    },
    {
      "Id": "9c9dcd65-07eb-4e7d-a61a-370d35d1cf76",
      "Name": "_Names",
      "Label": "Resource Names",
      "HelpText": "An optional line break separated list of resources to inspect. If left blank, all resources are inspected.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "MultiLineText"
      }
    },
    {
      "Id": "4805afba-9ff9-45a6-b2c2-764c2d0e5240",
      "Name": "_Create Artifact",
      "Label": "Create Artifact",
      "HelpText": "Check this to create an artifact capturing the output of the kubectl command.",
      "DefaultValue": "False",
      "DisplaySettings": {
        "Octopus.ControlType": "Checkbox"
      }
    },
    {
      "Id": "da70800b-0ec2-4bef-918c-08ef88c9f411",
      "Name": "_Namespace",
      "Label": "Namespace",
      "HelpText": "The Kubernetes namespace to inspect. Leave blank to use the default namespace of the Kubernetes target.",
      "DefaultValue": "",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "SpaceId": "Spaces-862",
  "$Meta": {
    "ExportedAt": "2020-04-22T01:16:26.902Z",
    "OctopusVersion": "2020.2.4-ci0070",
    "Type": "ActionTemplate"
  }
}
