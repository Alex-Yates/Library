{
  "Id": "05d2d9a8-3862-49ff-97d6-5f08935f6fa3",
  "Name": "Kubernetes - Create Service Account and Target",
  "Description": "Create a service account with a role granting full access to everything in the namespace, and create a Kubernetes target with the new account in Octopus",
  "ActionType": "Octopus.Script",
  "Version": 1,
  "CommunityActionTemplateId": null,
  "Packages": [],
  "Properties": {
    "Octopus.Action.RunOnServer": "false",
    "Octopus.Action.Script.ScriptSource": "Inline",
    "Octopus.Action.Script.Syntax": "PowerShell",
    "Octopus.Action.Script.ScriptBody": "if ([string]::IsNullOrWhitespace($Namespace)) {\n\tWrite-Error \"The namespace variable must be defined\"\n    exit 1\n}\n\nif ([string]::IsNullOrWhitespace($Role)) {\n\tWrite-Error \"The role variable must be defined\"\n    exit 1\n}\n\n$target = \"$($Namespace)-k8s\"\n$serviceaccount = \"$($Namespace)-deployer\"\n$rolename = \"$($Namespace)-deployer-role\"\n$binding = \"$($Namespace)-deployer-binding\"\n\nSet-Content -Path serviceaccount.yaml -Value @\"\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: $serviceaccount\n  namespace: $namespace \n---\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  namespace: $Namespace \n  name: $rolename\nrules:\n- apiGroups: [\"*\"]\n  resources: [\"*\"]\n  verbs: [\"*\"]\n---\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: $binding\n  namespace: $Namespace \nsubjects:\n- kind: ServiceAccount\n  name: $serviceaccount\n  apiGroup: \"\"\nroleRef:\n  kind: Role\n  name: $rolename\n  apiGroup: \"\"\n\"@\n  \n$data = kubectl get secret $(kubectl get serviceaccount $serviceaccount -o jsonpath=\"{.secrets[0].name}\" --namespace=$namespace) -o jsonpath=\"{.data.token}\"  --namespace=$namespace \n$token = [System.Text.Encoding]::ASCII.GetString([System.Convert]::FromBase64String($data))\n$url = (kubectl config view -o json | ConvertFrom-Json).clusters[0].cluster.server\n\nNew-OctopusTokenAccount -Name $target -token $token -updateIfExisting\n\nNew-OctopusKubernetesTarget `\n    -name $target `\n    -clusterUrl $url `\n    -octopusRoles $role `\n    -octopusAccountIdOrName $target `\n    -namespace $Namespace `\n    -updateIfExisting `\n    -skipTlsVerification True"
  },
  "Parameters": [
    {
      "Id": "1505ab59-1b6b-497e-9aa5-888f583c2cb2",
      "Name": "Role",
      "Label": "",
      "HelpText": "The role to assign to the new Kubernetes target",
      "DefaultValue": "k8s",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    },
    {
      "Id": "e0dc3fc2-b422-4b27-8353-efee0233cf7f",
      "Name": "Namespace",
      "Label": "",
      "HelpText": "The namespace that the service account is granted access to, as well as the default namespace on the target.",
      "DefaultValue": "#{Octopus.Environment.Name | ToLower}",
      "DisplaySettings": {
        "Octopus.ControlType": "SingleLineText"
      }
    }
  ],
  "$Meta": {
    "ExportedAt": "2020-08-02T23:50:06.800Z",
    "OctopusVersion": "2020.3.2",
    "Type": "ActionTemplate"
  },
  "LastModifiedBy": "mcasperson",
  "Category": "k8s"
}
